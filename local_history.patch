Index: strips_tester/gui.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- strips_tester/gui.py	(date 1522318022860)
+++ strips_tester/gui.py	(date 1522318022860)
@@ -13,9 +13,9 @@
 import RPi.GPIO as GPIO
 import time
 
-#import logging
+import logging
 
-#logger = logging.getLogger("strips_tester.garo.stm32_loader")
+logger = logging.getLogger("strips_tester.stm32_loader")
 
 GPIO.setmode(GPIO.BOARD)
 GPIO.setwarnings(False)
@@ -39,13 +39,16 @@
 count_local = 0
 count_local_self = 0
 
-GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
-GPIO.setup(40, GPIO.IN, pull_up_down=GPIO.PUD_DOWN)
+GPIO.setup(12, GPIO.IN, pull_up_down=GPIO.PUD_UP)
+GPIO.setup(40, GPIO.IN, pull_up_down=GPIO.PUD_UP)
 
 GPIO.setup(11, GPIO.OUT)
 GPIO.setup(13, GPIO.OUT)
 GPIO.setup(15, GPIO.OUT)
 
+GPIO.setup(18, GPIO.OUT)
+GPIO.setup(22, GPIO.OUT)
+
 GPIO.output(11, GPIO.LOW)
 GPIO.output(13, GPIO.LOW)
 GPIO.output(15, GPIO.LOW)
@@ -58,7 +61,6 @@
         self.create_gui()
 
     def create_gui(self):
-
         # Inicializacija okna
         self.top.wm_title("GARO Programator")
         self.top.minsize(width=500, height=250)
@@ -84,6 +86,15 @@
         self.button_flash.place(x=340, y=210, width=150, height=30)
 
         # Copyright
+
+def get_latest_firmware():
+    latest = get_all_firmware()[0]
+    return latest
+
+def get_all_firmware():
+    arr = os.listdir(DIR + "/bin")
+
+    return arr
         self.copyright_text = tk.Label(self.top, text="(c) Marcel Janƒçar, Strip's Lab", justify="right", state="disabled")
         self.copyright_text.place(x=300, y=10)
 
@@ -101,15 +112,6 @@
         self.copyright_img.image = self.photo
         self.copyright_img.place(x=330, y=25)
 
-def get_latest_firmware():
-    latest = get_all_firmware()[0]
-    return latest
-
-def get_all_firmware():
-    arr = os.listdir(DIR + "/bin")
-
-    return arr
-
 
 
 
@@ -198,6 +200,7 @@
     flasher = Flash.STM32M0Flasher(que,18, 22, 3, '/stmConfig.json', 'bin/' + gui.variable.get())
 
     t = threading.Thread(target=flasher.flash)
+    t.Daemon = True
     t.start()
 
     for i in range(100):
@@ -205,8 +208,10 @@
         top.update()
         time.sleep(0.1)
 
+    t.join()
+
     success = que.get()
-    t.join()
+
 
     # Turn off YLED
     GPIO.output(15, GPIO.LOW)
@@ -240,11 +245,11 @@
 
     #gui.label_text1.config(text="State: {}".format(state))
 
-    if(state or state1):
-        if(state):
+    if(state == False or state1 == False):
+        if(state == False):
             gui.label_title.config(text="Programiranje MEL")
 
-        if(state1):
+        if(state1 == False):
             gui.label_title.config(text="Programiranje MVC")
 
         top.update()
